// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.grammatech.gtirb.proto.Module

sealed abstract class FileFormat(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = FileFormat
  def isFormatUndefined: _root_.scala.Boolean = false
  def isCoff: _root_.scala.Boolean = false
  def isElf: _root_.scala.Boolean = false
  def isPe: _root_.scala.Boolean = false
  def isIdaProDb32: _root_.scala.Boolean = false
  def isIdaProDb64: _root_.scala.Boolean = false
  def isXcoff: _root_.scala.Boolean = false
  def isMacho: _root_.scala.Boolean = false
  def isRaw: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[FileFormat] = com.grammatech.gtirb.proto.Module.FileFormat
  final def asRecognized: _root_.scala.Option[com.grammatech.gtirb.proto.Module.FileFormat.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.grammatech.gtirb.proto.Module.FileFormat.Recognized])
}

object FileFormat extends _root_.scalapb.GeneratedEnumCompanion[FileFormat] {
  sealed trait Recognized extends FileFormat
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[FileFormat] = this
  
  @SerialVersionUID(0L)
  case object Format_Undefined extends FileFormat(0) with FileFormat.Recognized {
    val index = 0
    val name = "Format_Undefined"
    override def isFormatUndefined: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object COFF extends FileFormat(1) with FileFormat.Recognized {
    val index = 1
    val name = "COFF"
    override def isCoff: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ELF extends FileFormat(2) with FileFormat.Recognized {
    val index = 2
    val name = "ELF"
    override def isElf: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PE extends FileFormat(3) with FileFormat.Recognized {
    val index = 3
    val name = "PE"
    override def isPe: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IdaProDb32 extends FileFormat(4) with FileFormat.Recognized {
    val index = 4
    val name = "IdaProDb32"
    override def isIdaProDb32: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object IdaProDb64 extends FileFormat(5) with FileFormat.Recognized {
    val index = 5
    val name = "IdaProDb64"
    override def isIdaProDb64: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object XCOFF extends FileFormat(6) with FileFormat.Recognized {
    val index = 6
    val name = "XCOFF"
    override def isXcoff: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MACHO extends FileFormat(7) with FileFormat.Recognized {
    val index = 7
    val name = "MACHO"
    override def isMacho: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object RAW extends FileFormat(8) with FileFormat.Recognized {
    val index = 8
    val name = "RAW"
    override def isRaw: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends FileFormat(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(Format_Undefined, COFF, ELF, PE, IdaProDb32, IdaProDb64, XCOFF, MACHO, RAW)
  def fromValue(__value: _root_.scala.Int): FileFormat = __value match {
    case 0 => Format_Undefined
    case 1 => COFF
    case 2 => ELF
    case 3 => PE
    case 4 => IdaProDb32
    case 5 => IdaProDb64
    case 6 => XCOFF
    case 7 => MACHO
    case 8 => RAW
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = ModuleProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = ModuleProto.scalaDescriptor.enums(0)
}