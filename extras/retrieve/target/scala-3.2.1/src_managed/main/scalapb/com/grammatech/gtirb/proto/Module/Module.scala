// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.grammatech.gtirb.proto.Module

@SerialVersionUID(0L)
final case class Module(
    uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    binaryPath: _root_.scala.Predef.String = "",
    preferredAddr: _root_.scala.Long = 0L,
    rebaseDelta: _root_.scala.Long = 0L,
    fileFormat: com.grammatech.gtirb.proto.Module.FileFormat = com.grammatech.gtirb.proto.Module.FileFormat.Format_Undefined,
    isa: com.grammatech.gtirb.proto.Module.ISA = com.grammatech.gtirb.proto.Module.ISA.ISA_Undefined,
    name: _root_.scala.Predef.String = "",
    symbols: _root_.scala.Seq[com.grammatech.gtirb.proto.Symbol.Symbol] = _root_.scala.Seq.empty,
    proxies: _root_.scala.Seq[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock] = _root_.scala.Seq.empty,
    sections: _root_.scala.Seq[com.grammatech.gtirb.proto.Section.Section] = _root_.scala.Seq.empty,
    auxData: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData] = _root_.scala.collection.immutable.Map.empty,
    entryPoint: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    byteOrder: com.grammatech.gtirb.proto.Module.ByteOrder = com.grammatech.gtirb.proto.Module.ByteOrder.ByteOrder_Undefined,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Module] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = uuid
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      
      {
        val __value = binaryPath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = preferredAddr
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, __value)
        }
      };
      
      {
        val __value = rebaseDelta
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      
      {
        val __value = fileFormat.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      
      {
        val __value = isa.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      symbols.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      proxies.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      sections.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      auxData.foreach { __item =>
        val __value = com.grammatech.gtirb.proto.Module.Module._typemapper_auxData.toBase(__item)
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = entryPoint
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(18, __value)
        }
      };
      
      {
        val __value = byteOrder.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(19, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = uuid
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      {
        val __v = binaryPath
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = preferredAddr
        if (__v != 0L) {
          _output__.writeUInt64(3, __v)
        }
      };
      {
        val __v = rebaseDelta
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      {
        val __v = fileFormat.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      {
        val __v = isa.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      symbols.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sections.foreach { __v =>
        val __m = __v
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      proxies.foreach { __v =>
        val __m = __v
        _output__.writeTag(16, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      auxData.foreach { __v =>
        val __m = com.grammatech.gtirb.proto.Module.Module._typemapper_auxData.toBase(__v)
        _output__.writeTag(17, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = entryPoint
        if (!__v.isEmpty) {
          _output__.writeBytes(18, __v)
        }
      };
      {
        val __v = byteOrder.value
        if (__v != 0) {
          _output__.writeEnum(19, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withUuid(__v: _root_.com.google.protobuf.ByteString): Module = copy(uuid = __v)
    def withBinaryPath(__v: _root_.scala.Predef.String): Module = copy(binaryPath = __v)
    def withPreferredAddr(__v: _root_.scala.Long): Module = copy(preferredAddr = __v)
    def withRebaseDelta(__v: _root_.scala.Long): Module = copy(rebaseDelta = __v)
    def withFileFormat(__v: com.grammatech.gtirb.proto.Module.FileFormat): Module = copy(fileFormat = __v)
    def withIsa(__v: com.grammatech.gtirb.proto.Module.ISA): Module = copy(isa = __v)
    def withName(__v: _root_.scala.Predef.String): Module = copy(name = __v)
    def clearSymbols = copy(symbols = _root_.scala.Seq.empty)
    def addSymbols(__vs: com.grammatech.gtirb.proto.Symbol.Symbol *): Module = addAllSymbols(__vs)
    def addAllSymbols(__vs: Iterable[com.grammatech.gtirb.proto.Symbol.Symbol]): Module = copy(symbols = symbols ++ __vs)
    def withSymbols(__v: _root_.scala.Seq[com.grammatech.gtirb.proto.Symbol.Symbol]): Module = copy(symbols = __v)
    def clearProxies = copy(proxies = _root_.scala.Seq.empty)
    def addProxies(__vs: com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock *): Module = addAllProxies(__vs)
    def addAllProxies(__vs: Iterable[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock]): Module = copy(proxies = proxies ++ __vs)
    def withProxies(__v: _root_.scala.Seq[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock]): Module = copy(proxies = __v)
    def clearSections = copy(sections = _root_.scala.Seq.empty)
    def addSections(__vs: com.grammatech.gtirb.proto.Section.Section *): Module = addAllSections(__vs)
    def addAllSections(__vs: Iterable[com.grammatech.gtirb.proto.Section.Section]): Module = copy(sections = sections ++ __vs)
    def withSections(__v: _root_.scala.Seq[com.grammatech.gtirb.proto.Section.Section]): Module = copy(sections = __v)
    def clearAuxData = copy(auxData = _root_.scala.collection.immutable.Map.empty)
    def addAuxData(__vs: (_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData) *): Module = addAllAuxData(__vs)
    def addAllAuxData(__vs: Iterable[(_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData)]): Module = copy(auxData = auxData ++ __vs)
    def withAuxData(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData]): Module = copy(auxData = __v)
    def withEntryPoint(__v: _root_.com.google.protobuf.ByteString): Module = copy(entryPoint = __v)
    def withByteOrder(__v: com.grammatech.gtirb.proto.Module.ByteOrder): Module = copy(byteOrder = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = uuid
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = binaryPath
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = preferredAddr
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = rebaseDelta
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = fileFormat.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => {
          val __t = isa.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 7 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 9 => symbols
        case 16 => proxies
        case 12 => sections
        case 17 => auxData.iterator.map(com.grammatech.gtirb.proto.Module.Module._typemapper_auxData.toBase(_)).toSeq
        case 18 => {
          val __t = entryPoint
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 19 => {
          val __t = byteOrder.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(uuid)
        case 2 => _root_.scalapb.descriptors.PString(binaryPath)
        case 3 => _root_.scalapb.descriptors.PLong(preferredAddr)
        case 4 => _root_.scalapb.descriptors.PLong(rebaseDelta)
        case 5 => _root_.scalapb.descriptors.PEnum(fileFormat.scalaValueDescriptor)
        case 6 => _root_.scalapb.descriptors.PEnum(isa.scalaValueDescriptor)
        case 7 => _root_.scalapb.descriptors.PString(name)
        case 9 => _root_.scalapb.descriptors.PRepeated(symbols.iterator.map(_.toPMessage).toVector)
        case 16 => _root_.scalapb.descriptors.PRepeated(proxies.iterator.map(_.toPMessage).toVector)
        case 12 => _root_.scalapb.descriptors.PRepeated(sections.iterator.map(_.toPMessage).toVector)
        case 17 => _root_.scalapb.descriptors.PRepeated(auxData.iterator.map(com.grammatech.gtirb.proto.Module.Module._typemapper_auxData.toBase(_).toPMessage).toVector)
        case 18 => _root_.scalapb.descriptors.PByteString(entryPoint)
        case 19 => _root_.scalapb.descriptors.PEnum(byteOrder.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.grammatech.gtirb.proto.Module.Module.type = com.grammatech.gtirb.proto.Module.Module
    // @@protoc_insertion_point(GeneratedMessage[gtirb.proto.Module])
}

object Module extends scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.Module.Module] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.Module.Module] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.grammatech.gtirb.proto.Module.Module = {
    var __uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __binaryPath: _root_.scala.Predef.String = ""
    var __preferredAddr: _root_.scala.Long = 0L
    var __rebaseDelta: _root_.scala.Long = 0L
    var __fileFormat: com.grammatech.gtirb.proto.Module.FileFormat = com.grammatech.gtirb.proto.Module.FileFormat.Format_Undefined
    var __isa: com.grammatech.gtirb.proto.Module.ISA = com.grammatech.gtirb.proto.Module.ISA.ISA_Undefined
    var __name: _root_.scala.Predef.String = ""
    val __symbols: _root_.scala.collection.immutable.VectorBuilder[com.grammatech.gtirb.proto.Symbol.Symbol] = new _root_.scala.collection.immutable.VectorBuilder[com.grammatech.gtirb.proto.Symbol.Symbol]
    val __proxies: _root_.scala.collection.immutable.VectorBuilder[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock] = new _root_.scala.collection.immutable.VectorBuilder[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock]
    val __sections: _root_.scala.collection.immutable.VectorBuilder[com.grammatech.gtirb.proto.Section.Section] = new _root_.scala.collection.immutable.VectorBuilder[com.grammatech.gtirb.proto.Section.Section]
    val __auxData: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData]
    var __entryPoint: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __byteOrder: com.grammatech.gtirb.proto.Module.ByteOrder = com.grammatech.gtirb.proto.Module.ByteOrder.ByteOrder_Undefined
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __uuid = _input__.readBytes()
        case 18 =>
          __binaryPath = _input__.readStringRequireUtf8()
        case 24 =>
          __preferredAddr = _input__.readUInt64()
        case 32 =>
          __rebaseDelta = _input__.readInt64()
        case 40 =>
          __fileFormat = com.grammatech.gtirb.proto.Module.FileFormat.fromValue(_input__.readEnum())
        case 48 =>
          __isa = com.grammatech.gtirb.proto.Module.ISA.fromValue(_input__.readEnum())
        case 58 =>
          __name = _input__.readStringRequireUtf8()
        case 74 =>
          __symbols += _root_.scalapb.LiteParser.readMessage[com.grammatech.gtirb.proto.Symbol.Symbol](_input__)
        case 130 =>
          __proxies += _root_.scalapb.LiteParser.readMessage[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock](_input__)
        case 98 =>
          __sections += _root_.scalapb.LiteParser.readMessage[com.grammatech.gtirb.proto.Section.Section](_input__)
        case 138 =>
          __auxData += com.grammatech.gtirb.proto.Module.Module._typemapper_auxData.toCustom(_root_.scalapb.LiteParser.readMessage[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry](_input__))
        case 146 =>
          __entryPoint = _input__.readBytes()
        case 152 =>
          __byteOrder = com.grammatech.gtirb.proto.Module.ByteOrder.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.grammatech.gtirb.proto.Module.Module(
        uuid = __uuid,
        binaryPath = __binaryPath,
        preferredAddr = __preferredAddr,
        rebaseDelta = __rebaseDelta,
        fileFormat = __fileFormat,
        isa = __isa,
        name = __name,
        symbols = __symbols.result(),
        proxies = __proxies.result(),
        sections = __sections.result(),
        auxData = __auxData.result(),
        entryPoint = __entryPoint,
        byteOrder = __byteOrder,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.grammatech.gtirb.proto.Module.Module] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.grammatech.gtirb.proto.Module.Module(
        uuid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        binaryPath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        preferredAddr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        rebaseDelta = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        fileFormat = com.grammatech.gtirb.proto.Module.FileFormat.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.grammatech.gtirb.proto.Module.FileFormat.Format_Undefined.scalaValueDescriptor).number),
        isa = com.grammatech.gtirb.proto.Module.ISA.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.grammatech.gtirb.proto.Module.ISA.ISA_Undefined.scalaValueDescriptor).number),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        symbols = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Seq[com.grammatech.gtirb.proto.Symbol.Symbol]]).getOrElse(_root_.scala.Seq.empty),
        proxies = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Seq[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock]]).getOrElse(_root_.scala.Seq.empty),
        sections = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Seq[com.grammatech.gtirb.proto.Section.Section]]).getOrElse(_root_.scala.Seq.empty),
        auxData = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).map(_.as[_root_.scala.Seq[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(com.grammatech.gtirb.proto.Module.Module._typemapper_auxData.toCustom(_)).toMap,
        entryPoint = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        byteOrder = com.grammatech.gtirb.proto.Module.ByteOrder.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(19).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(com.grammatech.gtirb.proto.Module.ByteOrder.ByteOrder_Undefined.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ModuleProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ModuleProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 9 => __out = com.grammatech.gtirb.proto.Symbol.Symbol
      case 16 => __out = com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock
      case 12 => __out = com.grammatech.gtirb.proto.Section.Section
      case 17 => __out = com.grammatech.gtirb.proto.Module.Module.AuxDataEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.com.grammatech.gtirb.proto.Module.Module.AuxDataEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => com.grammatech.gtirb.proto.Module.FileFormat
      case 6 => com.grammatech.gtirb.proto.Module.ISA
      case 19 => com.grammatech.gtirb.proto.Module.ByteOrder
    }
  }
  lazy val defaultInstance = com.grammatech.gtirb.proto.Module.Module(
    uuid = _root_.com.google.protobuf.ByteString.EMPTY,
    binaryPath = "",
    preferredAddr = 0L,
    rebaseDelta = 0L,
    fileFormat = com.grammatech.gtirb.proto.Module.FileFormat.Format_Undefined,
    isa = com.grammatech.gtirb.proto.Module.ISA.ISA_Undefined,
    name = "",
    symbols = _root_.scala.Seq.empty,
    proxies = _root_.scala.Seq.empty,
    sections = _root_.scala.Seq.empty,
    auxData = _root_.scala.collection.immutable.Map.empty,
    entryPoint = _root_.com.google.protobuf.ByteString.EMPTY,
    byteOrder = com.grammatech.gtirb.proto.Module.ByteOrder.ByteOrder_Undefined
  )
  @SerialVersionUID(0L)
  final case class AuxDataEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[com.grammatech.gtirb.proto.AuxData.AuxData] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AuxDataEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): AuxDataEntry = copy(key = __v)
      def getValue: com.grammatech.gtirb.proto.AuxData.AuxData = value.getOrElse(com.grammatech.gtirb.proto.AuxData.AuxData.defaultInstance)
      def clearValue: AuxDataEntry = copy(value = _root_.scala.None)
      def withValue(__v: com.grammatech.gtirb.proto.AuxData.AuxData): AuxDataEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: com.grammatech.gtirb.proto.Module.Module.AuxDataEntry.type = com.grammatech.gtirb.proto.Module.Module.AuxDataEntry
      // @@protoc_insertion_point(GeneratedMessage[gtirb.proto.Module.AuxDataEntry])
  }
  
  object AuxDataEntry extends scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.grammatech.gtirb.proto.Module.Module.AuxDataEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[com.grammatech.gtirb.proto.AuxData.AuxData] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = Option(__value.fold(_root_.scalapb.LiteParser.readMessage[com.grammatech.gtirb.proto.AuxData.AuxData](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      com.grammatech.gtirb.proto.Module.Module.AuxDataEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        com.grammatech.gtirb.proto.Module.Module.AuxDataEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.grammatech.gtirb.proto.AuxData.AuxData]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = com.grammatech.gtirb.proto.Module.Module.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = com.grammatech.gtirb.proto.Module.Module.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = com.grammatech.gtirb.proto.AuxData.AuxData
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = com.grammatech.gtirb.proto.Module.Module.AuxDataEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class AuxDataEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Module.Module.AuxDataEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.grammatech.gtirb.proto.Module.Module.AuxDataEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.AuxData.AuxData] = field(_.getValue)((c_, f_) => c_.copy(value = Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.grammatech.gtirb.proto.AuxData.AuxData]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry, (_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData)] =
      _root_.scalapb.TypeMapper[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry, (_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData)](__m => (__m.key, __m.getValue))(__p => com.grammatech.gtirb.proto.Module.Module.AuxDataEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[com.grammatech.gtirb.proto.AuxData.AuxData]
    ): _root_.com.grammatech.gtirb.proto.Module.Module.AuxDataEntry = _root_.com.grammatech.gtirb.proto.Module.Module.AuxDataEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[gtirb.proto.Module.AuxDataEntry])
  }
  
  implicit class ModuleLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Module.Module]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.grammatech.gtirb.proto.Module.Module](_l) {
    def uuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.uuid)((c_, f_) => c_.copy(uuid = f_))
    def binaryPath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.binaryPath)((c_, f_) => c_.copy(binaryPath = f_))
    def preferredAddr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.preferredAddr)((c_, f_) => c_.copy(preferredAddr = f_))
    def rebaseDelta: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.rebaseDelta)((c_, f_) => c_.copy(rebaseDelta = f_))
    def fileFormat: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Module.FileFormat] = field(_.fileFormat)((c_, f_) => c_.copy(fileFormat = f_))
    def isa: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Module.ISA] = field(_.isa)((c_, f_) => c_.copy(isa = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def symbols: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.grammatech.gtirb.proto.Symbol.Symbol]] = field(_.symbols)((c_, f_) => c_.copy(symbols = f_))
    def proxies: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock]] = field(_.proxies)((c_, f_) => c_.copy(proxies = f_))
    def sections: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.grammatech.gtirb.proto.Section.Section]] = field(_.sections)((c_, f_) => c_.copy(sections = f_))
    def auxData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData]] = field(_.auxData)((c_, f_) => c_.copy(auxData = f_))
    def entryPoint: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.entryPoint)((c_, f_) => c_.copy(entryPoint = f_))
    def byteOrder: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Module.ByteOrder] = field(_.byteOrder)((c_, f_) => c_.copy(byteOrder = f_))
  }
  final val UUID_FIELD_NUMBER = 1
  final val BINARY_PATH_FIELD_NUMBER = 2
  final val PREFERRED_ADDR_FIELD_NUMBER = 3
  final val REBASE_DELTA_FIELD_NUMBER = 4
  final val FILE_FORMAT_FIELD_NUMBER = 5
  final val ISA_FIELD_NUMBER = 6
  final val NAME_FIELD_NUMBER = 7
  final val SYMBOLS_FIELD_NUMBER = 9
  final val PROXIES_FIELD_NUMBER = 16
  final val SECTIONS_FIELD_NUMBER = 12
  final val AUX_DATA_FIELD_NUMBER = 17
  final val ENTRY_POINT_FIELD_NUMBER = 18
  final val BYTE_ORDER_FIELD_NUMBER = 19
  @transient
  private[Module] val _typemapper_auxData: _root_.scalapb.TypeMapper[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry, (_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData)] = implicitly[_root_.scalapb.TypeMapper[com.grammatech.gtirb.proto.Module.Module.AuxDataEntry, (_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData)]]
  def of(
    uuid: _root_.com.google.protobuf.ByteString,
    binaryPath: _root_.scala.Predef.String,
    preferredAddr: _root_.scala.Long,
    rebaseDelta: _root_.scala.Long,
    fileFormat: com.grammatech.gtirb.proto.Module.FileFormat,
    isa: com.grammatech.gtirb.proto.Module.ISA,
    name: _root_.scala.Predef.String,
    symbols: _root_.scala.Seq[com.grammatech.gtirb.proto.Symbol.Symbol],
    proxies: _root_.scala.Seq[com.grammatech.gtirb.proto.ProxyBlock.ProxyBlock],
    sections: _root_.scala.Seq[com.grammatech.gtirb.proto.Section.Section],
    auxData: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, com.grammatech.gtirb.proto.AuxData.AuxData],
    entryPoint: _root_.com.google.protobuf.ByteString,
    byteOrder: com.grammatech.gtirb.proto.Module.ByteOrder
  ): _root_.com.grammatech.gtirb.proto.Module.Module = _root_.com.grammatech.gtirb.proto.Module.Module(
    uuid,
    binaryPath,
    preferredAddr,
    rebaseDelta,
    fileFormat,
    isa,
    name,
    symbols,
    proxies,
    sections,
    auxData,
    entryPoint,
    byteOrder
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[gtirb.proto.Module])
}
