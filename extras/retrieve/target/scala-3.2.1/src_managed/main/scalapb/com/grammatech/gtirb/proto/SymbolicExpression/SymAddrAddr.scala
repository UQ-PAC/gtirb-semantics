// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.grammatech.gtirb.proto.SymbolicExpression

@SerialVersionUID(0L)
final case class SymAddrAddr(
    scale: _root_.scala.Long = 0L,
    offset: _root_.scala.Long = 0L,
    symbol1Uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    symbol2Uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SymAddrAddr] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = scale
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = offset
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      
      {
        val __value = symbol1Uuid
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
        }
      };
      
      {
        val __value = symbol2Uuid
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = scale
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = offset
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = symbol1Uuid
        if (!__v.isEmpty) {
          _output__.writeBytes(3, __v)
        }
      };
      {
        val __v = symbol2Uuid
        if (!__v.isEmpty) {
          _output__.writeBytes(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withScale(__v: _root_.scala.Long): SymAddrAddr = copy(scale = __v)
    def withOffset(__v: _root_.scala.Long): SymAddrAddr = copy(offset = __v)
    def withSymbol1Uuid(__v: _root_.com.google.protobuf.ByteString): SymAddrAddr = copy(symbol1Uuid = __v)
    def withSymbol2Uuid(__v: _root_.com.google.protobuf.ByteString): SymAddrAddr = copy(symbol2Uuid = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = scale
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = offset
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = symbol1Uuid
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 4 => {
          val __t = symbol2Uuid
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(scale)
        case 2 => _root_.scalapb.descriptors.PLong(offset)
        case 3 => _root_.scalapb.descriptors.PByteString(symbol1Uuid)
        case 4 => _root_.scalapb.descriptors.PByteString(symbol2Uuid)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr.type = com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr
    // @@protoc_insertion_point(GeneratedMessage[gtirb.proto.SymAddrAddr])
}

object SymAddrAddr extends scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr = {
    var __scale: _root_.scala.Long = 0L
    var __offset: _root_.scala.Long = 0L
    var __symbol1Uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __symbol2Uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __scale = _input__.readInt64()
        case 16 =>
          __offset = _input__.readInt64()
        case 26 =>
          __symbol1Uuid = _input__.readBytes()
        case 34 =>
          __symbol2Uuid = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr(
        scale = __scale,
        offset = __offset,
        symbol1Uuid = __symbol1Uuid,
        symbol2Uuid = __symbol2Uuid,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr(
        scale = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        offset = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        symbol1Uuid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        symbol2Uuid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SymbolicExpressionProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SymbolicExpressionProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr(
    scale = 0L,
    offset = 0L,
    symbol1Uuid = _root_.com.google.protobuf.ByteString.EMPTY,
    symbol2Uuid = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class SymAddrAddrLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr](_l) {
    def scale: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.scale)((c_, f_) => c_.copy(scale = f_))
    def offset: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.offset)((c_, f_) => c_.copy(offset = f_))
    def symbol1Uuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.symbol1Uuid)((c_, f_) => c_.copy(symbol1Uuid = f_))
    def symbol2Uuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.symbol2Uuid)((c_, f_) => c_.copy(symbol2Uuid = f_))
  }
  final val SCALE_FIELD_NUMBER = 1
  final val OFFSET_FIELD_NUMBER = 2
  final val SYMBOL1_UUID_FIELD_NUMBER = 3
  final val SYMBOL2_UUID_FIELD_NUMBER = 4
  def of(
    scale: _root_.scala.Long,
    offset: _root_.scala.Long,
    symbol1Uuid: _root_.com.google.protobuf.ByteString,
    symbol2Uuid: _root_.com.google.protobuf.ByteString
  ): _root_.com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr = _root_.com.grammatech.gtirb.proto.SymbolicExpression.SymAddrAddr(
    scale,
    offset,
    symbol1Uuid,
    symbol2Uuid
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[gtirb.proto.SymAddrAddr])
}
