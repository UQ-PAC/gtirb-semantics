// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.grammatech.gtirb.proto.Symbol

@SerialVersionUID(0L)
final case class Symbol(
    uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    optionalPayload: com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Empty,
    name: _root_.scala.Predef.String = "",
    atEnd: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Symbol] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = uuid
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      if (optionalPayload._value.isDefined) {
        val __value = optionalPayload._value.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
      };
      if (optionalPayload.referentUuid.isDefined) {
        val __value = optionalPayload.referentUuid.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = atEnd
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = uuid
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      optionalPayload._value.foreach { __v =>
        val __m = __v
        _output__.writeUInt64(2, __m)
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      optionalPayload.referentUuid.foreach { __v =>
        val __m = __v
        _output__.writeBytes(5, __m)
      };
      {
        val __v = atEnd
        if (__v != false) {
          _output__.writeBool(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withUuid(__v: _root_.com.google.protobuf.ByteString): Symbol = copy(uuid = __v)
    def getValue: _root_.scala.Long = optionalPayload._value.getOrElse(0L)
    def withValue(__v: _root_.scala.Long): Symbol = copy(optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Value(__v))
    def getReferentUuid: _root_.com.google.protobuf.ByteString = optionalPayload.referentUuid.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withReferentUuid(__v: _root_.com.google.protobuf.ByteString): Symbol = copy(optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.ReferentUuid(__v))
    def withName(__v: _root_.scala.Predef.String): Symbol = copy(name = __v)
    def withAtEnd(__v: _root_.scala.Boolean): Symbol = copy(atEnd = __v)
    def clearOptionalPayload: Symbol = copy(optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Empty)
    def withOptionalPayload(__v: com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload): Symbol = copy(optionalPayload = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = uuid
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => optionalPayload._value.orNull
        case 5 => optionalPayload.referentUuid.orNull
        case 3 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = atEnd
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(uuid)
        case 2 => optionalPayload._value.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => optionalPayload.referentUuid.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(name)
        case 6 => _root_.scalapb.descriptors.PBoolean(atEnd)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: com.grammatech.gtirb.proto.Symbol.Symbol.type = com.grammatech.gtirb.proto.Symbol.Symbol
    // @@protoc_insertion_point(GeneratedMessage[gtirb.proto.Symbol])
}

object Symbol extends scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.Symbol.Symbol] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.grammatech.gtirb.proto.Symbol.Symbol] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.grammatech.gtirb.proto.Symbol.Symbol = {
    var __uuid: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __name: _root_.scala.Predef.String = ""
    var __atEnd: _root_.scala.Boolean = false
    var __optionalPayload: com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __uuid = _input__.readBytes()
        case 16 =>
          __optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Value(_input__.readUInt64())
        case 42 =>
          __optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.ReferentUuid(_input__.readBytes())
        case 26 =>
          __name = _input__.readStringRequireUtf8()
        case 48 =>
          __atEnd = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.grammatech.gtirb.proto.Symbol.Symbol(
        uuid = __uuid,
        name = __name,
        atEnd = __atEnd,
        optionalPayload = __optionalPayload,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.grammatech.gtirb.proto.Symbol.Symbol] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      com.grammatech.gtirb.proto.Symbol.Symbol(
        uuid = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        atEnd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        optionalPayload = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Value(_))
            .orElse[com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.ReferentUuid(_)))
            .getOrElse(com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SymbolProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SymbolProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = com.grammatech.gtirb.proto.Symbol.Symbol(
    uuid = _root_.com.google.protobuf.ByteString.EMPTY,
    name = "",
    atEnd = false,
    optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Empty
  )
  sealed trait OptionalPayload extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isValue: _root_.scala.Boolean = false
    def isReferentUuid: _root_.scala.Boolean = false
    def _value: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    def referentUuid: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
  }
  object OptionalPayload {
    @SerialVersionUID(0L)
    case object Empty extends com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Value(value: _root_.scala.Long) extends com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload {
      type ValueType = _root_.scala.Long
      override def isValue: _root_.scala.Boolean = true
      override def _value: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class ReferentUuid(value: _root_.com.google.protobuf.ByteString) extends com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isReferentUuid: _root_.scala.Boolean = true
      override def referentUuid: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 5
    }
  }
  implicit class SymbolLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Symbol.Symbol]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.grammatech.gtirb.proto.Symbol.Symbol](_l) {
    def uuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.uuid)((c_, f_) => c_.copy(uuid = f_))
    def _value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getValue)((c_, f_) => c_.copy(optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.Value(f_)))
    def referentUuid: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getReferentUuid)((c_, f_) => c_.copy(optionalPayload = com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload.ReferentUuid(f_)))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def atEnd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.atEnd)((c_, f_) => c_.copy(atEnd = f_))
    def optionalPayload: _root_.scalapb.lenses.Lens[UpperPB, com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload] = field(_.optionalPayload)((c_, f_) => c_.copy(optionalPayload = f_))
  }
  final val UUID_FIELD_NUMBER = 1
  final val VALUE_FIELD_NUMBER = 2
  final val REFERENT_UUID_FIELD_NUMBER = 5
  final val NAME_FIELD_NUMBER = 3
  final val AT_END_FIELD_NUMBER = 6
  def of(
    uuid: _root_.com.google.protobuf.ByteString,
    optionalPayload: com.grammatech.gtirb.proto.Symbol.Symbol.OptionalPayload,
    name: _root_.scala.Predef.String,
    atEnd: _root_.scala.Boolean
  ): _root_.com.grammatech.gtirb.proto.Symbol.Symbol = _root_.com.grammatech.gtirb.proto.Symbol.Symbol(
    uuid,
    optionalPayload,
    name,
    atEnd
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[gtirb.proto.Symbol])
}
